plugins {
	id 'fabric-loom' version '0.4-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
group = project.maven_group

apply from: 'https://dblsaiko.net/pub/gradle/autoversion.gradle'

minecraft {
	accessWidener = file("src/main/resources/lacrimis.accesswidener")
}

repositories {
	maven {
		name = "grondag"
		url = "https://grondag-repo.appspot.com"
		credentials {
			username "guest"
			password ""
		}
	}
	maven {
		name = "Cotton"
		url = 'http://server.bbkr.space:8081/artifactory/libs-release'
	}
	maven {
		url = 'https://maven.blamejared.com' 
	}
	maven {
		url = 'https://maven.dblsaiko.net'
	}
	maven {
		name = "Wrenchable"
		url  "https://dl.bintray.com/zundrel/wrenchable"
	}
}

dependencies {
	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.minecraft_version}+${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modImplementation 'net.dblsaiko.qcommon.croco:croco:2.1.2'
	include 'net.dblsaiko.qcommon.croco:croco:2.1.2'

	//Cotton Resources
	modImplementation "io.github.cottonmc:cotton-resources:${project.cotton_resources_version}"

	//Patchouli api
	modImplementation("vazkii.patchouli:Patchouli:${project.patchouli_version}")

	//REI
	modImplementation("me.shedaniel:RoughlyEnoughItems:${project.rei_version}")

	//Wrenchable api
	def wrenchVersion = "com.zundrel:wrenchable:${project.wrenchable_version}"
	modImplementation (wrenchVersion) {
		exclude group: "io.github.prospector"
		exclude group: "net.fabricmc"
	}
	include wrenchVersion
}

processResources {
	inputs.property "version", project.version

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": project.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}
	repositories {
	}
}
